name: Deploy to GCP Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 최신 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 17 설치 (Java 17 사용 시)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Gradle 빌드 수행 (Gradle Wrapper 사용 시)
      - name: Build application
        run: |
          cd Book_ManageSys/base/manage/
          chmod +x ./gradlew
          ./gradlew clean bootJar

      # 4. 원격 서버에 SSH로 접속하여 배포 스크립트 실행
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          # port: ${{ secrets.SERVER_PORT }}  # 기본 포트 22를 사용한다면 이 항목은 생략 가능
          script: |
            cd Book_ManageSys/base/manage/
            # 원격 서버에서 최신 코드 pull (Git이 설치되어 있어야 함)
            git pull origin main
            # Gradle 빌드를 통한 jar 파일 생성 (gradlew가 있으면 사용)
            chmod +x ./gradlew
            ./gradlew clean bootJar
            # 실행 중인 애플리케이션 종료 (실행 중인 프로세스를 종료, 없으면 무시)
            pkill -f "java -jar manage-0.0.1-SNAPSHOT.jar" || true
            # 새 애플리케이션 실행 (nohup으로 백그라운드 실행)
            nohup java -jar manage-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
